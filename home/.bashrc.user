## put this at the end of .bashrc:
#if [ -f ~/.bashrc.user ]; then
#	source ~/.bashrc.user
#fi

# save a copy of the old prompt, potentially restore it in .bashrc.site
OLD_PS1=$PS1
# prompt with full directory name
PS1="[\u@\h \w]\$ "

alias gfa='git fetch --all --prune'
alias gpp='git pull --ff-only --prune'
alias gsl='git stash list'
alias gls='git ls-files'
alias gss='git stash show -p'
alias gsd='git stash drop'
# like in Windows 95 when you could watch the little piece of paper get crumpled
# and soar lazily into the recycle bin:
alias stashdrop='git stash && git stash drop'
# time to stop fighting this urge:
alias gcam='git commit -am'

function gitbase {
	REMOTE=`git remote | head -n 1`
	git merge-base HEAD $REMOTE/master
}

# "git branch diff"
function gitbd {
	REMOTE=`git remote | head -n 1`
	if [ -n "$REMOTE" ]; then
		git diff $REMOTE/master...HEAD "$@"
	else
		echo "No remote found."
	fi
}

# start bisecting my own changes in a branch
function gbinit {
	git bisect start HEAD `gitbase`
}

alias svnshow='svn diff -c'

alias mtop='top -c -u $USER'

# outfox people (like the ArXiv) who try to block wget
BOGUS_UA="Mozilla/5.0 (compatible; MSIE 10.6; Windows NT 6.1; Trident/5.0; InfoPath.2; SLCC1; \
.NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 2.0.50727) 3gpp-gba UNTRUSTED/1.0"
alias lieget='wget -U "${BOGUS_UA}"'
alias liecurl='curl -A "${BOGUS_UA}"'

# hackish analogue to Alt-F2 "run" in gnome shell
function run {
	"$@" < /dev/null &> /dev/null &
}

# find out where a Python package is; tell you where; go there
function cdpackage {
	FILE_STR=`python -c "import os.path; import $1; print $1.__file__;" 2> /dev/null`
	DIRNAME=`dirname $FILE_STR 2> /dev/null`
	if [ -n "$DIRNAME" ]; then
		echo $FILE_STR
		pushd $DIRNAME
	else
		echo "Couldn't find package."
	fi
}

PATH=$PATH:~/bin

# pull in site-specific settings
if [ -f ~/.bashrc.site ]; then
	source ~/.bashrc.site
fi
